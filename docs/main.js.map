{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/models/usuario.models.ts","webpack:///./src/app/pages/home/home.component.css","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/registro/registro.component.css","webpack:///./src/app/pages/registro/registro.component.html","webpack:///./src/app/pages/registro/registro.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { RegistroComponent } from './pages/registro/registro.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'registro', component: RegistroComponent },\n  { path: 'login', component: LoginComponent },\n  { path: '**', redirectTo: 'registro' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'loginApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// Se importa FormsModule\nimport { FormsModule } from '@angular/forms';\n// Importación de ClientModule\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { RegistroComponent } from './pages/registro/registro.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistroComponent,\n    HomeComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  // Inyectamos el servicio\n  constructor(\n      private auth: AuthService,\n      private router: Router\n  ) { }\n\n  // canActivate(\n  //   next: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //   return true;\n  // }\n  \n  canActivate(): boolean{\n    // console.log('Guard');\n    // return this.auth.estaAutotenticado();\n    if (this.auth.estaAutotenticado()) {\n        return true;\n    }else{\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n  }\n}\n","// Utilizaremos un archivo de typescript para controlar las propiedades y posibles metodos que puede tener este usuario\r\n// La idea principal es para que ayude a escribir sin cometer errores\r\n// Y que ayude en toda parte donde necesite un usuario\r\n\r\nexport class UsuarioModel {\r\n    email: string;\r\n    password: string;\r\n    nombre: string;\r\n}\r\n\r\n// si necesitara mas campos en mi formulario deberian agregarse en este modelo","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"m-5\\\">\\n  <h1> Mi Aplicación secreta</h1>\\n  <button \\n        class=\\\"btn btn-outline-danger\\\"\\n        (click)=\\\"salir()\\\"\\n        >\\n  Salir\\n  </button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  salir(){\n    this.auth.logout();\n    this.router.navigateByUrl('/login');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"limiter animated fadeInLeft\\\">\\n    <div class=\\\"container-login100\\\">\\n        <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n            <form (ngSubmit)=\\\"login(l)\\\"\\n            #l=\\\"ngForm\\\"\\n            class=\\\"login100-form validate-form flex-sb flex-w\\\">\\n\\n                <span class=\\\"login100-form-title p-b-51\\\">\\n                    Login\\n                </span>\\n\\n                <span *ngIf=\\\"l.submitted && l.controls['email'].errors\\\"\\n                class=\\\"text-danger\\\">El correo es obligatorio</span> \\n                <div class=\\\"wrap-input100 m-b-16\\\">\\n                    <input class=\\\"input100\\\" \\n                           type=\\\"email\\\"              \\n                           name=\\\"email\\\" \\n                           [(ngModel)]=\\\"usuario.email\\\"\\n                           required\\n                           email\\n                           placeholder=\\\"Email\\\">\\n\\n                    <span class=\\\"focus-input100\\\"></span>\\n                </div>\\n                \\n                <span *ngIf=\\\"l.submitted && l.controls['password'].errors\\\"\\n                class=\\\"text-danger\\\">La contraseña debe de ser más de 6 letras</span> \\n                <div class=\\\"wrap-input100 m-b-16\\\">\\n                    <input class=\\\"input100\\\"\\n                           type=\\\"password\\\" \\n                           name=\\\"password\\\"\\n                           [(ngModel)]=\\\"usuario.password\\\"\\n                           required\\n                           minlength=\\\"6\\\"\\n                           placeholder=\\\"Password\\\">\\n                    <span class=\\\"focus-input100\\\"></span>\\n                </div>\\n                \\n                <div class=\\\"flex-sb-m w-full p-t-3 p-b-24\\\">\\n                    <div class=\\\"contact100-form-checkbox\\\">\\n                        <input [(ngModel)]=\\\"recordarme\\\"\\n                            class=\\\"input-checkbox100\\\" id=\\\"ckb1\\\" type=\\\"checkbox\\\" name=\\\"remember-me\\\">\\n                        <label class=\\\"label-checkbox100\\\" for=\\\"ckb1\\\">\\n                            Recordar mi usuario\\n                        </label>\\n                    </div>\\n\\n                    <div>\\n                        <a routerLink=\\\"/registro\\\" class=\\\"txt1\\\">\\n                            ¿No tienes cuenta?\\n                        </a>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                    <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                        Ingresar\\n                    </button>\\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { UsuarioModel } from '../../models/usuario.models';\nimport { AuthService } from '../../services/auth.service';\nimport { switchAll } from 'rxjs/operators';\n// ES6 Modules or TypeScript\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  // Creamos una instancia del usuarioModel\n  usuario: UsuarioModel = new UsuarioModel();\n  recordarme = false;\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n\n    if (localStorage.getItem('email')) {\n      this.usuario.email = localStorage.getItem('email');\n      this.recordarme = true;\n    }\n\n  }\n\n  login(form: NgForm) {\n    if (form.invalid) { return; }\n\n    Swal.fire({\n      // prevenir que la persona pueda cerrar el sweet alter afuera\n      allowOutsideClick: false,\n      type: 'info',\n      text: 'Espere por favor'\n    });\n    // Boton que simula un loading\n    Swal.showLoading();\n\n    this.auth.login(this.usuario)\n      .subscribe(resp => {\n        console.log(resp);\n        Swal.close();\n\n        // si tenemos un usuario valido\n        if (this.recordarme) {\n          localStorage.setItem('email', this.usuario.email);\n        }\n\n        // navegaremos al home\n        this.router.navigateByUrl('/home');\n      }, (err) => {\n        console.log(err.error.error.message);\n        // si tenemos un error\n        Swal.fire({\n          // prevenir que la persona pueda cerrar el sweet alter afuera\n          allowOutsideClick: false,\n          type: 'error',\n          text: err.error.error.message\n        });\n      });\n    // console.log('Imprimir si el formulario es valido');\n    // validar\n    // console.log(form);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdHJvL3JlZ2lzdHJvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"limiter animated fadeInRight\\\">\\n        <div class=\\\"container-login100\\\">\\n            <div class=\\\"wrap-login100 p-t-50 p-b-90\\\">\\n                <form (ngSubmit)=\\\"onSubmit(f)\\\"\\n                    #f=\\\"ngForm\\\"\\n                    class=\\\"login100-form validate-form flex-sb flex-w\\\">\\n    \\n                    <span class=\\\"login100-form-title p-b-51\\\">\\n                        Crear nueva cuenta\\n                    </span>\\n    \\n                    <span *ngIf=\\\"f.submitted && f.controls['email'].errors\\\"\\n                    class=\\\"text-danger animated fadeIn\\\">El correo es obligatorio</span> \\n                    <div class=\\\"wrap-input100 m-b-16\\\">\\n                        <input class=\\\"input100\\\" \\n                               type=\\\"email\\\" \\n                               name=\\\"email\\\" \\n                               [(ngModel)]=\\\"usuario.email\\\" \\n                               required\\n                               email\\n                               placeholder=\\\"Email\\\">\\n    \\n                        <span class=\\\"focus-input100\\\"></span>\\n                    </div>\\n                    <!-- se añade dos condiciones si el formulario se ha postiado o hay errores en el campo nombre -->\\n                    <span *ngIf=\\\"f.submitted && f.controls['nombre'].errors\\\"\\n                     class=\\\"text-danger animated fadeIn\\\">El nombre es obligatorio</span>\\n                    <div class=\\\"wrap-input100 m-b-16\\\">\\n                        <input class=\\\"input100\\\" \\n                               type=\\\"text\\\" \\n                               name=\\\"nombre\\\" \\n                               [(ngModel)]=\\\"usuario.nombre\\\"\\n                               minlength=\\\"2\\\"\\n                               required \\n                               placeholder=\\\"Nombre y apellidos\\\">\\n    \\n                        <span class=\\\"focus-input100\\\"></span>\\n                    </div>\\n                    \\n                    <span *ngIf=\\\"f.submitted && f.controls['password'].errors\\\"\\n                           class=\\\"text-danger animated fadeIn\\\">La contraseña debe de ser más de 6 letras</span>\\n                    <div class=\\\"wrap-input100 m-b-16\\\">\\n                        <input class=\\\"input100\\\"\\n                               type=\\\"password\\\" \\n                               name=\\\"password\\\" \\n                               [(ngModel)]=\\\"usuario.password\\\" \\n                               minlength=\\\"6\\\"\\n                               required\\n                               placeholder=\\\"Password\\\">\\n                        <span class=\\\"focus-input100\\\"></span>\\n                    </div>\\n                    \\n                    <div  class=\\\"flex-sb-m w-full p-t-3 p-b-24\\\">\\n                        <div class=\\\"contact100-form-checkbox\\\">\\n                            <input [(ngModel)]=\\\"recordarme\\\"\\n                            class=\\\"input-checkbox100\\\" id=\\\"ckb1\\\" type=\\\"checkbox\\\" name=\\\"remember-me\\\">\\n                            <label class=\\\"label-checkbox100\\\" for=\\\"ckb1\\\">\\n                                Recordar mi usuario\\n                            </label>\\n                        </div>\\n    \\n                        <div>\\n                            <a routerLink=\\\"/login\\\" class=\\\"txt1\\\">\\n                                ¿Ya tienes cuenta? / Ingresar\\n                            </a>\\n                        </div>\\n                    </div>\\n    \\n                    <div class=\\\"container-login100-form-btn m-t-17\\\">\\n                        <button class=\\\"login100-form-btn\\\" type=\\\"submit\\\">\\n                            Crear cuenta\\n                        </button>\\n                    </div>\\n    \\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    \"","import { Component, OnInit } from '@angular/core';\nimport { UsuarioModel } from '../../models/usuario.models';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\n// ES6 Modules or TypeScript\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n\n  // Creamos una instancia del usuarioModel\n  usuario: UsuarioModel;\n  recordarme = false;\n  // iyectamos el servicio\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n\n  }\n\n  ngOnInit() {\n    // Incializamos el usuario\n    this.usuario = new UsuarioModel();\n    // this.usuario.email = 'piteraraya@gmail.com';\n\n\n\n  }\n\n\n\n  onSubmit(form: NgForm) {\n    // si el formulario noi es valido lo unico que quiero hacer es un return y salirme\n    if (form.invalid) { return; }\n\n    Swal.fire({\n      // prevenir que la persona pueda cerrar el sweet alter afuera\n      allowOutsideClick: false,\n      type: 'info',\n      text: 'Espere por favor'\n    });\n    // Boton que simula un loading\n    Swal.showLoading();\n\n    // console.log('Formulario enviado');\n    // console.log(this.usuario);\n    // console.log(form);\n\n    this.auth.nuevoUsuario(this.usuario)\n      .subscribe(respuesta => {\n        console.log(respuesta);\n        Swal.close();\n\n        // si tenemos un usuario valido\n        if (this.recordarme) {\n          localStorage.setItem('email', this.usuario.email);\n        }\n\n\n\n        // navegaremos al home\n        this.router.navigateByUrl('/home');\n      }, (err) => {\n        console.log(err.error.error.message);\n        Swal.fire({\n          // prevenir que la persona pueda cerrar el sweet alter afuera\n          allowOutsideClick: false,\n          type: 'error',\n          title:'Error al autenticar',\n          text: err.error.error.message\n        });\n      });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UsuarioModel } from '../models/usuario.models';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // Ocuparemos dos servicios\n\n  private url = 'https://identitytoolkit.googleapis.com/v1/accounts:';\n  private apikey = 'AIzaSyCvlPoOF9w5mu-fy847W9jyi0dZHSNnmgM'; // copiamos api key del setting de firebase del proyecto\n\n  userToken: string;\n\n  // Sign up with email/password | crear nuevos usuarios\n  // https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n\n  // Sign with email/password | Login\n  // https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]\n\n\n  //Iyecatamos nuestro servicio\n  constructor(private http: HttpClient) {\n    // Colocamos el leer el token al inicio para saber justo cuando ingresa verifica si tenemos un token o no\n    this.leerToken();\n  }\n\n  // Cerrar sessión\n  logout() {\n    localStorage.removeItem('token');\n  }\n\n  login(usuario: UsuarioModel) {\n    // Objeto usuario\n    const authData = {\n      ...usuario,\n      returnSecureToken: true\n    };\n    return this.http.post(\n      `${this.url}signInWithPassword?key=${this.apikey}`,\n      authData\n    ).pipe(\n      // la ventaja del map que si se aparece un error el map nunca se dispara\n      map(resp => {\n        // console.log('entro en el mapa del RXJS');\n        // se ejecuta solo si la función tiene exito , si el return trae un error el map nunca se va ejecutar\n        this.guardarToken(resp['idToken']);\n        return resp;\n      })\n    );\n\n  }\n\n  nuevoUsuario(usuario: UsuarioModel) {\n    // añadir returnSecureToken\n    // Una forma\n    // const authData = {\n    //   email: usuario.email,\n    //   password: usuario.password,\n    //   returnSecureToken: true\n    // }\n\n    //Otra forma\n    const authData = {\n      ...usuario,\n      returnSecureToken: true\n    };\n\n    // Llamar nuestro servicio enciando una petición post\n\n    return this.http.post(\n      `${this.url}signUp?key=${this.apikey}`,\n      authData\n    ).pipe(\n      // la ventaja del map que si se aparece un error el map nunca se dispara\n      map( resp => {\n        // console.log('entro en el mapa del RXJS');\n        // se ejecuta solo si la función tiene exito , si el return trae un error el map nunca se va ejecutar\n        this.guardarToken(resp['idToken']);\n        return resp;\n      })\n    );\n\n\n  }\n\n  private guardarToken(idToken: string) {\n\n    this.userToken = idToken;\n    // grabamos el token\n    localStorage.setItem('token', idToken);\n\n    //Validar fecha\n    let hoy = new Date();\n    hoy.setSeconds(3600);\n\n    localStorage.setItem('expira',hoy.getTime().toString());\n  }\n\n  private leerToken() {\n    // Verificamos si tenemos información\n    if (localStorage.getItem('token')) {\n      // si existe lo leemos del localstorage\n      this.userToken = localStorage.getItem('token');\n    } else {\n      // si no existe el token\n      this.userToken = '';\n    }\n\n    return this.userToken;\n  }\n\n  //Metodo para saber si el usuario que está autenticado\n\n  estaAutotenticado(): boolean{\n    // return this.userToken.length>2; validación correcta pero incompleta\n\n        //Validar fecha\n        if ( this.userToken.length < 2 ){\n          return false; // token no existe\n        }\n\n        const  expira = Number(localStorage.getItem('expira'));\n\n        // transforma expira en fecha\n        const expiraDate = new Date();\n        expiraDate.setTime(expira);\n\n        // Está fecha es mayor en momento actual?\n        if(expiraDate > new Date()){\n          return true;\n        }else{\n          return false;\n        }\n\n\n  }\n  \n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}